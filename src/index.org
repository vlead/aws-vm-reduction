#+Title: Experiments as a service
#+Date: Friday, December 23, 2016 
#+Author: VLEAD 
#+SETUPFILE: ./org-templates/level-1.org
#+TAGS: boilerplate(b)
#+EXCLUDE_TAGS: boilerplate
#+OPTIONS: ^:nil

* Introduction 
  This will contain the documentation related to the activities for 
  experiment as a service. 


* Approach A
** Steps
  + Identify the labs whose experiments are to be clubbed togther.
  + Deploy a =experiment server=, which will contain the clubbed
    experiments.
  + Copy the source code of =lab1= in =experiment server= such that
    sources are at /var/www/html/lab1/
  + Copy the source code of =lab2= in =experiment server= such that
    sources are at /var/www/html/lab2/
  + Visit the lab and then specific experiments, identify the file
    serving the Simulation (say Simulation.html)
  + Say experiment is served at URL http://lab1/exp1/Simulation.html and http://lab2/exp1/Simulation.html
  + Try to access the same experiment from experiment server (say
    http://experiment-server/lab1/exp1/Simulation.html)
  + Similiarly, try to access ( say
    http://experiment-server/lab2/exp1/Simulation.html)
  + Make changes in reverse-proxy server to redirect
    http://lab1/exp1/Simulation.html to
    http://experiment-server/lab1/Simulation.html
** Issues 
  + Lab sources with relative and absolute paths are to be checked for
    link integrity. Change in DicrectoryRoot will make assets like
    images, js, css unaccessble and hence will not load.
  + Adding entries in Reverse proxy server to redirect old urls to new
    urls need multiple rules for file to file redirection.






* Approach B
** Strategy 
   + Identify a =labs= to be clubbed together. 
   + Visit each experiment of the lab and using inspect element,
     identify the files serving the experiment. For example, say there
     is a lab http://lab1.vlabs.ac.in . Identify the file which is
     serving the experiment and identify the assets related to that
     experiment.
   + Check for asolute and relative URLs in the lab sources. When
     multiple lab sources are to be clubbed together, DirectoryRoot
     will change. Hence hard coded URLs absolute and relative
     (specially absolute) will not be accessing to the right asset
     they need to.
   + Every access using absolute and relative URL must be fixed in
     terms of the DirectoryRoot of experiment server.
   + Automated tool like grunt can help in identifying errors for
     unaccessible links/files
   + After fixing the issues Lab wise/experiment wise, document the
     steps which are required to repeat the same procedure for other
     labs as well.
   + After identifying the right process can be automated using scripts.
  
  
   

   
